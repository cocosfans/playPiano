{"version":3,"sources":["file:///D:/cocos/PlayPiano/assets/script/ui/note.ts"],"names":["_decorator","Component","Sprite","TextAsset","SpriteFrame","Constant","ccclass","property","note","text","start","j","parseInt","getSong","noteOrder","node","getComponent","spriteFrame","spriteframe","parseCSV","csvString","lines","split","result","forEach","line","items","push","column","noteText","dataArray","cell","console","log","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAgBC,MAAAA,M,OAAAA,M;AAAOC,MAAAA,S,OAAAA,S;AAAUC,MAAAA,W,OAAAA,W;;AAC7CC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;sBAGjBQ,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAAC,CAACH,WAAD,CAAD,C,UAERG,QAAQ,CAACJ,SAAD,C,2BAJb,MACaK,IADb,SAC0BP,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAKxBQ,IALwB;AAAA;;AAMhCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,CAAQ,GAAG,CAAf;AACAA,UAAAA,CAAC,GAAGC,QAAQ,CAAC,KAAKC,OAAL,CAAa,CAAb,EAAe;AAAA;AAAA,oCAASC,SAAT,EAAf,CAAD,CAAZ;AACAH,UAAAA,CAAC;AACL,eAAKI,IAAL,CAAUC,YAAV,CAAuBd,MAAvB,EAA+Be,WAA/B,GAA2C,KAAKC,WAAL,CAAiBP,CAAjB,CAA3C;AACC;;AACDQ,QAAAA,QAAQ,CAACC,SAAD,EAAY;AAChB,cAAIC,KAAK,GAAGD,SAAS,CAACE,KAAV,CAAgB,IAAhB,CAAZ;AACA,cAAIC,MAAM,GAAG,EAAb;AACAF,UAAAA,KAAK,CAACG,OAAN,CAAeC,IAAD,IAAU;AACpB,gBAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAC,YAAAA,MAAM,CAACI,IAAP,CAAYD,KAAZ;AACH,WAHD;AAIA,iBAAOH,MAAP;AACH;;AACDV,QAAAA,OAAO,CAACY,IAAD,EAAaG,MAAb,EACP;AAAI,eAAKnB,IAAL,GAAY,KAAKoB,QAAL,CAAcpB,IAA1B;AACA,cAAIqB,SAAS,GAAG,KAAKX,QAAL,CAAc,KAAKV,IAAnB,CAAhB;AACA,cAAIsB,IAAJ;AACCA,UAAAA,IAAI,GAAGD,SAAS,CAACL,IAAD,CAAT,CAAgBG,MAAhB,CAAP,CAHL,CAII;;AACCI,UAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,iBAAOF,IAAP;AAEH;;AACDG,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAjC+B,O;;;;;iBAEI,E;;;;;;;iBAEf,I","sourcesContent":["import { _decorator, Component, Node,Sprite,TextAsset,SpriteFrame } from 'cc';\r\nimport { Constant } from '../framework/Constant';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('note')\r\nexport class note extends Component {\r\n    @property([SpriteFrame])\r\n    public spriteframe: SpriteFrame[] = [];\r\n    @property(TextAsset)\r\n    noteText:TextAsset = null;\r\n    private text:string;\r\n    start() {\r\n        let j:number = 0;\r\n        j = parseInt(this.getSong(4,Constant.noteOrder++));\r\n        j--;\r\n    this.node.getComponent(Sprite).spriteFrame=this.spriteframe[j];\r\n    }\r\n    parseCSV(csvString) {\r\n        let lines = csvString.split('\\n');\r\n        let result = [];\r\n        lines.forEach((line) => {\r\n            let items = line.split(',');\r\n            result.push(items);\r\n        });\r\n        return result;\r\n    }\r\n    getSong(line:number,column:number)\r\n    {   this.text = this.noteText.text;\r\n        let dataArray = this.parseCSV(this.text);\r\n        let cell:string;\r\n         cell = dataArray[line][column];\r\n        //console.log(dataArray[0][1]);\r\n         console.log('e');\r\n        return cell;\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}