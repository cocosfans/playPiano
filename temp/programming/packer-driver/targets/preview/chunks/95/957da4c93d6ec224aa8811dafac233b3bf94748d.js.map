{"version":3,"sources":["file:///D:/cocos/PlayPiano/assets/script/framework/GameManager.ts"],"names":["_decorator","Component","TextAsset","Label","Prefab","Color","instantiate","SpriteFrame","Sprite","AudioSource","Constant","ccclass","property","GameManager","audioClip2","level","text","wordInt","Songlines","lineTterator","errorCount","_nodeType","BlockType","NOTE","k","start","Math","ceil","Level","init","wordPrefab","i","block","WORD","label","children","getChildByName","getComponent","color","string","getSong","j","parseInt","spriteFrame","name","wordOrder","node","addChild","setPosition","console","log","parseCSV","csvString","lines","split","result","items","forEach","line","push","column","NoteText","WordText","dataArray","cell","addHits","Hits","removeAllChildren","length","child","removeChild","destroy","update","deltaTime","Hited","info","ClickId","backGround","audioSource","play"],"mappings":"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","sourcesContent":["import { _decorator, Component, TextAsset,Node,Label,Prefab,Color,instantiate, SpriteFrame,Sprite,AudioClip,AudioSource} from 'cc';\r\nimport { Constant } from './Constant';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    @property(TextAsset)\r\n    WordText: TextAsset = null;\r\n    @property(TextAsset)\r\n    NoteText: TextAsset = null;\r\n    @property([SpriteFrame])\r\n    public spriteFrame: SpriteFrame[] = [];\r\n    @property([SpriteFrame])\r\n    public backGround: SpriteFrame[] = [];\r\n    @property(Prefab)\r\n    public wordPrefab:Prefab=null;\r\n    public audioClip2:AudioClip =null;\r\n    @property(AudioSource)\r\n    public audioSource:AudioSource =null;\r\n    private level = [[0,64],[4,269],[18,212],[29,154],[37,161]];\r\n    private text:string;\r\n    private wordInt:number = 50;\r\n    private Songlines:number = 0;\r\n    private lineTterator:number = 0;\r\n    private errorCount:number = 0;\r\n    private _nodeType:number = Constant.BlockType.NOTE; //子节点类型,Constant.BlockType.NOTE:音符，Constant.BlockType.WORD:汉字；\r\n    private k = 0;//每一行的计数器\r\n    \r\n    start() {\r\n        this.Songlines = Math.ceil(this.level[Constant.Level][1]/20);\r\n       this.init(); \r\n\r\n    }\r\n    init()\r\n    { if (this.wordPrefab == null) return;\r\n        for(let i=0;i<20;i++)\r\n            {\r\n       let block:Node = instantiate(this.wordPrefab);\r\n       this._nodeType = Constant.BlockType.WORD;\r\n      let label = block.children[0].getChildByName('word').getComponent(Label);\r\n       label.color=new Color(0,0,0,255);\r\n       label.string = this.getSong(this.level[Constant.Level][0]+this.lineTterator,i);\r\n       this._nodeType = Constant.BlockType.NOTE;\r\n       let j:number = 0;\r\n       j = parseInt(this.getSong(this.level[Constant.Level][0]+this.lineTterator,i));\r\n       j--;\r\n       block.children[0].getChildByName('note').getComponent(Sprite).spriteFrame=this.spriteFrame[j];\r\n       //block.addChild(label);\r\n       block.name='wordback'+Constant.wordOrder;\r\n       this.node.addChild(block);\r\n       block.setPosition(-600+i*this.wordInt,0,20);\r\n    }\r\n    console.log(this.node);\r\n}\r\n    parseCSV(csvString) {\r\n        let lines = csvString.split('\\n');\r\n        let result = [];\r\n        let items = [];\r\n        lines.forEach((line) => {\r\n            if(this._nodeType == Constant.BlockType.NOTE)\r\n             items = line.split(','); \r\n             else\r\n            items = line.split('\\t');\r\n\r\n            result.push(items);\r\n        });\r\n        return result;\r\n    }\r\n    getSong(line:number,column:number)\r\n    {\r\n    if(this._nodeType == Constant.BlockType.NOTE)\r\n        this.text = this.NoteText.text;\r\n        else\r\n       this.text = this.WordText.text;\r\n       // console.log(this.text);\r\n        let dataArray = this.parseCSV(this.text);\r\n        let cell:string;\r\n         cell = dataArray[line][column];\r\n        return cell;\r\n\r\n    }\r\n    \r\n    addHits()\r\n    {\r\n    Constant.Hits++;\r\n    console.log(Constant.Hits);\r\n    }\r\n    removeAllChildren(node) {\r\n        // 使用while循环确保删除所有子节点\r\n        while (node.children.length > 0) {\r\n            let child = node.children[0];\r\n            // 将子节点从父节点中移除\r\n            node.removeChild(child);\r\n            // 如果需要，还可以手动删除子节点\r\n             child.destroy();\r\n        }\r\n    }\r\n    update(deltaTime: number) {\r\n       if(Constant.Hited)\r\n        {  \r\n            console.log(this.node.getChildByName('wordback'+Constant.Hits));\r\n            console.info(\"aa\");\r\n            this._nodeType == Constant.BlockType.NOTE;\r\n            if(Constant.ClickId==parseInt(this.getSong(this.level[Constant.Level][0]+this.lineTterator,this.k)))\r\n       this.node.children[this.k].children[0].getComponent(Sprite).spriteFrame=this.backGround[0];\r\n    else\r\n    {\r\n    this.node.children[this.k].children[0].getComponent(Sprite).spriteFrame=this.backGround[1];\r\n    this.errorCount++;\r\n    this.audioSource=this.getComponent(AudioSource);\r\n    this.audioSource.play();\r\n    console.log(this.errorCount);\r\n    }\r\n       Constant.Hited = 0;\r\n       this.k++;\r\n       if(this.k>=20)\r\n        {\r\n            this.lineTterator++;\r\n            this.removeAllChildren(this.node);\r\n            this.init();\r\n            this.k=0;\r\n        }\r\n       this.addHits();\r\n       if(Constant.Hits>=this.level[Constant.Level][1])\r\n        this.removeAllChildren(this.node);\r\n       }\r\n\r\n    }\r\n}\r\n"]}